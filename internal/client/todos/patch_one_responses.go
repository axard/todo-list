// Code generated by go-swagger; DO NOT EDIT.

package todos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/axard/todo-list/internal/restmodels"
)

// PatchOneReader is a Reader for the PatchOne structure.
type PatchOneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchOneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchOneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchOneDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchOneOK creates a PatchOneOK with default headers values
func NewPatchOneOK() *PatchOneOK {
	return &PatchOneOK{}
}

/*PatchOneOK handles this case with default header values.

Ок
*/
type PatchOneOK struct {
	Payload *restmodels.Item
}

func (o *PatchOneOK) Error() string {
	return fmt.Sprintf("[PATCH /{id}][%d] patchOneOK  %+v", 200, o.Payload)
}

func (o *PatchOneOK) GetPayload() *restmodels.Item {
	return o.Payload
}

func (o *PatchOneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Item)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchOneDefault creates a PatchOneDefault with default headers values
func NewPatchOneDefault(code int) *PatchOneDefault {
	return &PatchOneDefault{
		_statusCode: code,
	}
}

/*PatchOneDefault handles this case with default header values.

Ошибка
*/
type PatchOneDefault struct {
	_statusCode int

	Payload *restmodels.Error
}

// Code gets the status code for the patch one default response
func (o *PatchOneDefault) Code() int {
	return o._statusCode
}

func (o *PatchOneDefault) Error() string {
	return fmt.Sprintf("[PATCH /{id}][%d] patchOne default  %+v", o._statusCode, o.Payload)
}

func (o *PatchOneDefault) GetPayload() *restmodels.Error {
	return o.Payload
}

func (o *PatchOneDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchOneBody patch one body
swagger:model PatchOneBody
*/
type PatchOneBody struct {

	// completed
	Completed *bool `json:"completed,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this patch one body
func (o *PatchOneBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchOneBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchOneBody) UnmarshalBinary(b []byte) error {
	var res PatchOneBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
